{"version":3,"file":"static/js/691.0f1b6121.chunk.js","mappings":"oLAAaA,EAAQ,WACnB,OACE,0BACE,2DAGL,C,qMCFYC,GAAcC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,gEAKXE,EAAeF,EAAAA,GAAAA,OAAH,6DAKZG,GAAWH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,4JAOR,SAAAK,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,MAAnB,IAIDC,EAAOT,EAAAA,GAAAA,GAAH,6E,6BChBXU,EAASC,EAAAA,KAAaC,MAAM,CAChCC,WAAYF,EAAAA,KAETG,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,cAgEd,EA7De,WACb,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA4BF,EAAAA,EAAAA,UAAS,QAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,SACzBC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WAAM,wCAEd,2FACER,EAAU,WADZ,mBAGuBS,EAAAA,EAAAA,IAAmBL,GAH1C,OAGUM,EAHV,OAIIZ,EAAUY,EAAKC,SACfX,EAAU,YALd,gDAOIY,QAAQC,IAAR,MACAb,EAAU,YARd,0DAFc,sBACTI,GADS,mCAadU,EACD,GAAE,CAACV,IAMJ,OACE,iCACE,SAAC,KAAD,CACEW,cAAe,CAAEvB,WAAY,IAC7BwB,iBAAkB3B,EAClB4B,SATe,SAAC,EAAD,GAAoC,IAAjCzB,EAAgC,EAAhCA,WAAgB0B,EAAgB,EAAhBA,UACtCf,EAAgB,CAAEC,MAAOZ,IACzB0B,GACD,EAGG,UAKE,UAAC,KAAD,YACE,SAACxC,EAAD,CACEyC,KAAK,OACLC,KAAK,aACLC,YAAY,mBAEd,SAACxC,EAAD,CAAcsC,KAAK,SAAnB,qBACA,SAAC,KAAD,CAAcC,KAAK,oBAGX,YAAXrB,IAAwB,SAACuB,EAAA,EAAD,IACb,aAAXvB,IACC,wBACGF,EAAO0B,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOL,EAAd,EAAcA,KAAd,OACV,SAAChC,EAAD,WACE,SAACN,EAAD,CAAU4C,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMtB,GAA9C,SACGmB,GAASL,KAFHI,EADD,MASJ,aAAXzB,IAAyB,SAACtB,EAAA,EAAD,MAG/B,C","sources":["components/Error/Error.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["export const Error = () => {\n  return (\n    <div>\n      <p>Sorry, we didn't find anything</p>\n    </div>\n  );\n};\n","import styled from 'styled-components';\nimport { Field } from 'formik';\nimport { Link } from 'react-router-dom';\n\nexport const SearchInput = styled(Field)`\n  padding: 5px;\n  margin-right: 16px;\n`;\n\nexport const SearchButton = styled.button`\n  padding: 5px;\n  cursor: pointer;\n`;\n\nexport const ItemLink = styled(Link)`\n  text-decoration: none;\n  color: #212121;\n  transition: color 0.15s ease-in-out;\n\n  :hover,\n  :focus {\n    color: ${p => p.theme.colors.accent};\n  }\n`;\n\nexport const Item = styled.li`\n  :not(:last-child) {\n    margin-bottom: 8px;\n  }\n`;\n","import { fetchMoviesByQuery } from 'components/Api/Api';\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport { useState, useEffect } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport * as yup from 'yup';\nimport { SearchInput, SearchButton, ItemLink, Item } from './Movies.styled';\nimport Spinner from '../../components/Spinner';\nimport { Error } from 'components/Error/Error';\n\nconst schema = yup.object().shape({\n  inputValue: yup\n    .string()\n    .min(2, 'Too Short!')\n    .max(70, 'Too Long!')\n    .required('Required'),\n});\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [status, setStatus] = useState('idle');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!query) return;\n    async function fetchItems() {\n      setStatus('pending');\n      try {\n        const item = await fetchMoviesByQuery(query);\n        setMovies(item.results);\n        setStatus('resolved');\n      } catch (error) {\n        console.log(error);\n        setStatus('rejected');\n      }\n    }\n    fetchItems();\n  }, [query]);\n\n  const handleSubmit = ({ inputValue }, { resetForm }) => {\n    setSearchParams({ query: inputValue });\n    resetForm();\n  };\n  return (\n    <>\n      <Formik\n        initialValues={{ inputValue: '' }}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        <Form>\n          <SearchInput\n            type=\"text\"\n            name=\"inputValue\"\n            placeholder=\"Search movies\"\n          />\n          <SearchButton type=\"submit\">Search</SearchButton>\n          <ErrorMessage name=\"inputValue\" />\n        </Form>\n      </Formik>\n      {status === 'pending' && <Spinner />}\n      {status === 'resolved' && (\n        <ul>\n          {movies.map(({ id, title, name }) => (\n            <Item key={id}>\n              <ItemLink to={`/movies/${id}`} state={{ from: location }}>\n                {title || name}\n              </ItemLink>\n            </Item>\n          ))}\n        </ul>\n      )}\n      {status === 'rejected' && <Error />}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["Error","SearchInput","styled","Field","SearchButton","ItemLink","Link","p","theme","colors","accent","Item","schema","yup","shape","inputValue","min","max","required","useState","movies","setMovies","status","setStatus","useSearchParams","searchParams","setSearchParams","query","get","location","useLocation","useEffect","fetchMoviesByQuery","item","results","console","log","fetchItems","initialValues","validationSchema","onSubmit","resetForm","type","name","placeholder","Spinner","map","id","title","to","state","from"],"sourceRoot":""}