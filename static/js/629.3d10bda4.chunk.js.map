{"version":3,"file":"static/js/629.3d10bda4.chunk.js","mappings":"oLAAaA,EAAQ,WACnB,OACE,0BACE,2DAGL,C,iLCJYC,EAAWC,EAAAA,GAAAA,IAAH,yC,SC6CrB,EA3CoB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACbC,EAAgED,EAAhEC,YAAaC,EAAmDF,EAAnDE,eAAgBC,EAAmCH,EAAnCG,OAAQC,EAA2BJ,EAA3BI,SAAUC,EAAiBL,EAAjBK,aAEvD,OACE,0BACoB,IAAjBL,EAAMM,SACL,+BACE,UAACC,EAAA,EAAD,CAAKC,QAAQ,OAAOC,GAAI,EAAxB,WACE,SAACX,EAAD,CACEY,IACET,EAAW,yCAC2BA,GAClC,oFAENU,IAAKT,KAEP,UAACK,EAAA,EAAD,CAAKK,GAAI,EAAT,WACE,wBAAKV,KACL,4BACE,wCAAgBG,MAChB,sCACA,uBAAID,KACJ,oCACA,uBAAID,EAAOU,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,oBAQxD,E,oBChCYC,GAAWlB,EAAAA,EAAAA,IAAOmB,EAAAA,GAAPnB,CAAH,4JAOR,SAAAoB,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,MAAnB,IAIDC,EAAOxB,EAAAA,GAAAA,GAAH,kGAOJyB,GAAWzB,EAAAA,EAAAA,IAAOmB,EAAAA,GAAPnB,CAAH,6VAEF,SAAAoB,GAAC,OAAIA,EAAEC,MAAMK,MAAM,EAAlB,IACH,SAAAN,GAAC,OAAIA,EAAEC,MAAMK,MAAM,EAAlB,IACE,SAAAN,GAAC,OAAIA,EAAEC,MAAMK,MAAM,EAAlB,IACH,SAAAN,GAAC,OAAIA,EAAEC,MAAMK,MAAM,EAAlB,IACA,SAAAN,GAAC,OAAIA,EAAEC,MAAMK,MAAM,EAAlB,IAID,SAAAN,GAAC,OAAIA,EAAEC,MAAMM,MAAMC,MAAlB,IACT,SAAAR,GAAC,OAAIA,EAAEC,MAAMC,OAAOO,IAAnB,IAKC,SAAAT,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,MAAnB,I,UC+Bd,EA3DqB,WAAO,IAAD,IACjBO,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAO/B,EAAP,KAAcgC,EAAd,KACA,GAA4BD,EAAAA,EAAAA,UAAS,QAArC,eAAOE,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WAAM,wCACd,2FACEH,EAAU,WADZ,mBAGuBI,EAAAA,EAAAA,IAAgBT,GAHvC,OAGUU,EAHV,OAIIP,EAASO,GACTL,EAAU,YALd,gDAOIM,QAAQC,IAAR,MACAP,EAAU,YARd,0DADc,uBAAC,WAAD,wBAYdQ,EACD,GAAE,CAACb,IAEJ,IAAMc,EAAY,iBAAGR,QAAH,IAAGA,GAAH,UAAGA,EAAUS,aAAb,aAAG,EAAiBC,YAApB,QAA4B,SAE9C,OACE,2BACc,YAAXZ,IAAwB,SAACa,EAAA,EAAD,IACb,aAAXb,IACC,iCACE,SAACT,EAAD,CAAUuB,GAAIJ,EAAd,sBACA,SAAC,EAAD,CAAa3C,MAAOA,KACpB,UAACO,EAAA,EAAD,CACEyC,UAAU,SACVC,aAAa,SACbC,GAAI,EACJC,UAAU,8IAJZ,WAOE,oDACA,2BACE,SAAC5B,EAAD,WACE,SAACN,EAAD,CAAU8B,GAAG,OAAOH,MAAO,CAAEC,KAAMF,GAAnC,qBAIF,SAACpB,EAAD,WACE,SAACN,EAAD,CAAU8B,GAAG,UAAUH,MAAO,CAAEC,KAAMF,GAAtC,8BAMN,SAAC,KAAD,OAGQ,aAAXV,IAAyB,SAACpC,EAAA,EAAD,MAG/B,C","sources":["components/Error/Error.jsx","components/MovieMarkup/MovieMarkup.styled.jsx","components/MovieMarkup/MovieMarkup.jsx","components/MovieDetails/MovieDetails.styled.jsx","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["export const Error = () => {\n  return (\n    <div>\n      <p>Sorry, we didn't find anything</p>\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const MovieImg = styled.img`\n  width: 300px;\n`;\n","import { Box } from 'components/Box';\nimport { MovieImg } from './MovieMarkup.styled';\nimport PropTypes from 'prop-types';\n\nconst MovieMarkup = ({ movie }) => {\n  const { poster_path, original_title, genres, overview, vote_average } = movie;\n\n  return (\n    <main>\n      {movie.length !== 0 && (\n        <>\n          <Box display=\"flex\" mb={5}>\n            <MovieImg\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w300${poster_path}`\n                  : 'https://raw.githubusercontent.com/marvall/filmoteka/main/src/images/no-poster.png'\n              }\n              alt={original_title}\n            />\n            <Box ml={5}>\n              <h1>{original_title}</h1>\n              <div>\n                <p>User Score: {vote_average}</p>\n                <h3>Overview</h3>\n                <p>{overview}</p>\n                <h3>Genres</h3>\n                <p>{genres.map(genre => genre.name).join(', ')}</p>\n              </div>\n            </Box>\n          </Box>\n        </>\n      )}\n    </main>\n  );\n};\n\nMovieMarkup.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string,\n    original_title: PropTypes.string,\n    genres: PropTypes.array,\n    overview: PropTypes.string,\n    vote_average: PropTypes.number,\n  }),\n};\n\nexport default MovieMarkup;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const ItemLink = styled(Link)`\n  text-decoration: none;\n  color: #212121;\n  transition: color 0.15s ease-in-out;\n\n  :hover,\n  :focus {\n    color: ${p => p.theme.colors.accent};\n  }\n`;\n\nexport const Item = styled.li`\n  list-style: none;\n  :not(:last-child) {\n    margin-bottom: 8px;\n  }\n`;\n\nexport const BackLink = styled(Link)`\n  display: inline-block;\n  margin-bottom: ${p => p.theme.space[4]}px;\n  padding-top: ${p => p.theme.space[2]}px;\n  padding-bottom: ${p => p.theme.space[2]}px;\n  padding-left: ${p => p.theme.space[3]}px;\n  padding-right: ${p => p.theme.space[3]}px;\n\n  text-decoration: none;\n  outline: 1px solid;\n  border-radius: ${p => p.theme.radii.normal};\n  color: ${p => p.theme.colors.text};\n  transition: color 0.15s ease-in-out;\n\n  :hover,\n  :focus {\n    color: ${p => p.theme.colors.accent};\n  }\n`;\n","import { fetchMoviesById } from '../../components/Api/Api';\nimport { useState, useEffect } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport MovieMarkup from 'components/MovieMarkup';\nimport Spinner from '../../components/Spinner';\nimport { Box } from 'components/Box';\nimport { ItemLink, Item, BackLink } from './MovieDetails.styled';\nimport { Error } from 'components/Error/Error';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState([]);\n  const [status, setStatus] = useState('idle');\n  const location = useLocation();\n\n  useEffect(() => {\n    async function fetchItem() {\n      setStatus('pending');\n      try {\n        const item = await fetchMoviesById(movieId);\n        setMovie(item);\n        setStatus('resolved');\n      } catch (error) {\n        console.log(error);\n        setStatus('rejected');\n      }\n    }\n    fetchItem();\n  }, [movieId]);\n\n  const backLinkHref = location?.state?.from ?? 'movies';\n\n  return (\n    <div>\n      {status === 'pending' && <Spinner />}\n      {status === 'resolved' && (\n        <>\n          <BackLink to={backLinkHref}>Go Back</BackLink>\n          <MovieMarkup movie={movie} />\n          <Box\n            borderTop=\"normal\"\n            borderBottom=\"normal\"\n            px={4}\n            boxShadow=\"0 1px 4px rgba(0, 0, 0, 1), -23px 0 20px -23px rgba(0, 0, 0, 0.8),\n    23px 0 20px -23px rgba(0, 0, 0, 0.8), 0 0 40px rgba(0, 0, 0, 0.1) inset;\"\n          >\n            <h4>Additional information</h4>\n            <ul>\n              <Item>\n                <ItemLink to=\"cast\" state={{ from: backLinkHref }}>\n                  Cast\n                </ItemLink>\n              </Item>\n              <Item>\n                <ItemLink to=\"reviews\" state={{ from: backLinkHref }}>\n                  Reviews\n                </ItemLink>\n              </Item>\n            </ul>\n          </Box>\n          <Outlet />\n        </>\n      )}\n      {status === 'rejected' && <Error />}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["Error","MovieImg","styled","movie","poster_path","original_title","genres","overview","vote_average","length","Box","display","mb","src","alt","ml","map","genre","name","join","ItemLink","Link","p","theme","colors","accent","Item","BackLink","space","radii","normal","text","movieId","useParams","useState","setMovie","status","setStatus","location","useLocation","useEffect","fetchMoviesById","item","console","log","fetchItem","backLinkHref","state","from","Spinner","to","borderTop","borderBottom","px","boxShadow"],"sourceRoot":""}